name: Check

on:
  pull_request:

  push:
    branches:
      - main # Check branch after merge
    tags: ["*"]

concurrency:
  # Only run once for latest commit per ref and cancel other (previous) runs.
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check-docs:
    name: Check docs
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # we don't know what commit the last tag was it's safer to get entire repo so previousStableVersion resolves
          fetch-depth: 0

      - name: Setup scala-cli
        uses: VirtusLab/scala-cli-setup@v0.1.4
        with:
          scala-cli-version: 0.1.4

      - name: Run mdoc
        working-directory: .github/docs
        run: scala-cli run .

      - name: Check if docs are up to date
        run: |
          if [[ -n $(git status -s) ]]; then
            echo "README outdated, please run 'scala-cli run .' in '.github/docs' and commit changes."
            exit 1
          else 
            echo "README up to date."
          fi

  check-code-style:
    name: Code Style
    uses: playframework/.github/.github/workflows/cmd.yml@v3
    with:
      cmd: sbt validateCode

  tests:
    name: Tests
    needs:
      - "check-code-style"
    uses: playframework/.github/.github/workflows/cmd.yml@v3
    with:
      java: 17, 11
      scala: 2.13.x
      cmd: sbt ++$MATRIX_SCALA test

  run-application:
    strategy:
      matrix:
        mode: [development, production]
        include:
          - mode: development
            port: 3000
          - mode: production
            port: 9000
    name: Run in ${{ matrix.mode }} mode
    needs:
      - "tests"
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          # we don't know what commit the last tag was it's safer to get entire repo so previousStableVersion resolves
          fetch-depth: 0

      - name: Build docker image
        run: docker build -f .github/integration-test/Dockerfile-${{ matrix.mode }} -t play-scala-react-seed .

      - name: Run docker image
        run: docker run -p ${{ matrix.port }}:${{ matrix.port }} -d play-scala-react-seed

      - name: Setup scala-cli
        uses: VirtusLab/scala-cli-setup@v0.1.4
        with:
          scala-cli-version: 0.1.4

      - name: Wait for application
        working-directory: .github/integration-test
        run: scala-cli test . --server=false --java-opt "-Dapplication.port=${{ matrix.port }}"

  finish:
    name: Finish
    if: github.event_name == 'pull_request'
    needs: # Should be last
      - "tests"
      - "run-application"
    uses: playframework/.github/.github/workflows/rtm.yml@v3
